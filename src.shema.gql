# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CarePackage {
  discription: String!
  id: ID!
  image: LinkImage!
  medicalFacilitiesId: String!
  name: String!
  price: Float!
  register: [Register!]
  typePackageId: String!
}

input CreateCustomerInput {
  address: String
  dateOfBirth: DateTime
  email: String
  gender: String
  name: String!
  nation: String
  numberPhone: String
  userId: String!
}

input CreateDegreeInput {
  abbreviations: String!
  name: String!
}

input CreateDoctorInput {
  academicTitle: String
  avatar: LinkImageInput!
  dayOff: [DateTime!]!
  degree: String!
  discription: String!
  email: String!
  gender: String!
  medicalFactilitiesId: String!
  name: String!
  numberPhone: String!
  specialistId: String!
  userId: String!
}

input CreateMedicalFacilityInput {
  address: String!
  dayOff: [DateTime!]!
  discription: String!
  email: String!
  image: LinkImageInput!
  introduce: String!
  lat: Float
  legalRepresentation: String!
  lng: Float
  medicalFacilityName: String!
  numberPhone: String!
  operatingStatus: String!
  taxCode: String!
  userId: String!
}

input CreateMedicalSpecialtyInput {
  discription: String!
  medicalFactilityId: String!
  name: String!
  price: Float!
}

input CreateMedicalStaffInput {
  email: String!
  gender: String!
  medicalFacilityId: String!
  name: String!
  numberPhone: String!
  userId: String!
}

input CreatePackageInput {
  examinationDetails: String!
  gender: EGender!
  medicalFactilitiesId: String!
  packageName: String!
  price: Float!
  status: String!
}

input CreateProfileInput {
  address: String!
  customerId: String!
  dataOfBirth: DateTime!
  email: String!
  ethnic: String!
  fullname: String!
  gender: String!
  identity: String!
  job: String!
  medicalInsurance: String!
  numberPhone: String!
  relationship: String!
}

input CreateRegisterInput {
  date: DateTime!
  packegeId: String!
  profileId: String!
}

input CreateTypePackageInput {
  typeName: String!
}

input CreateUserByAdminInput {
  email: String!
  password: String!
  username: String!
}

input CreateUserInput {
  email: String!
  fullname: String!
  password: String!
  username: String!
}

input CreateVaccineInput {
  countryOfOrigin: String!
  indication: String!
  medicalFactilitiesId: String!
  note: String!
  price: Float!
  prophylactic: String!
  status: String!
  vaccineName: String!
}

type Customer {
  address: String!
  dateOfBirth: DateTime!
  email: String!
  gender: String!
  id: ID!
  name: String!
  nation: String!
  numberPhone: String!
  profile: [Profile!]
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Degree {
  abbreviations: String!
  doctor: Doctor
  id: ID!
  name: String!
}

type Doctor {
  academicTitle: EAcademicTitle
  avatar: LinkImage!
  dayOff: [DateTime!]!
  degree: EDegree!
  discription: String!
  email: String!
  gender: EGender!
  id: ID!
  medicalFactilitiesId: String!
  name: String!
  numberPhone: String!
  specialistId: String!
  userId: String!
}

enum EAcademicTitle {
  AssociateProfesso
  Professor
}

enum EDegree {
  Doctor
  DoctorS1
  DoctorS2
  Doctorate
  MasterDoctor
}

enum EGender {
  Female
  Male
}

type GeneralInfor {
  ID: String
  address: String!
  company: String!
  copyrigth: String!
  email: String!
  hotline: String!
  liscenceBusiness: String!
  liscenceOparating: String!
  logoFooter: LinkImage!
  logoHeader: LinkImage!
}

input GeneralInforUpdateInput {
  address: String!
  company: String!
  copyrigth: String!
  email: String!
  hotline: String!
  liscenceBusiness: String!
  liscenceOparating: String!
  logoFooter: LinkImageInput
  logoHeader: LinkImageInput
}

type LinkImage {
  filename: String!
  type: String!
  url: String!
}

input LinkImageInput {
  filename: String!
  type: String!
  url: String!
}

type LoginRespone {
  access_token: String!
  user: User!
}

input LoginUserInput {
  password: String!
  username: String!
}

type LogoutUser {
  logout: Boolean!
}

type MedicalFacilities {
  address: String!
  carePackage: [CarePackage!]
  dayOff: [DateTime!]!
  discription: String!
  doctors: [Doctor!]
  email: String!
  id: ID!
  image: LinkImage!
  introduce: String!
  lat: Float
  legalRepresentation: String!
  lng: Float
  medicalFacilityName: String!
  numberPhone: String!
  operatingStatus: String!
  taxCode: String!
  userId: String!
}

type MedicalSpecialties {
  discription: String!
  id: ID!
  medicalFactilityId: String!
  name: String!
  price: Float!
}

type MedicalStaff {
  email: String!
  gender: String!
  id: ID!
  medicalFacilityId: String!
  name: String!
  numberPhone: String!
  userId: String!
}

type Mutation {
  activeUser(id: String!): User!
  createCarePackage(input: createCarePackageInput!): CarePackage!
  createDegree(input: CreateDegreeInput!): Degree!
  createDoctor(createDoctorInput: CreateDoctorInput!): Doctor!
  createMedicalFacility(input: CreateMedicalFacilityInput!): MedicalFacilities!
  createMedicalSpecialty(input: CreateMedicalSpecialtyInput!): MedicalSpecialties!
  createMedicalStaff(input: CreateMedicalStaffInput!): MedicalStaff!
  createPackage(input: CreatePackageInput!): Package!
  createProfile(input: CreateProfileInput!): Profile!
  createRegister(input: CreateRegisterInput!): Register!
  createTypePackage(input: CreateTypePackageInput!): TypePackage!
  createVaccination(input: CreateVaccineInput!): Vaccination!
  createcustomer(input: CreateCustomerInput!): Customer!
  deleteCarePackage(input: String!): CarePackage!
  deleteDegree(input: String!): Degree!
  deleteDoctor(id: String!): Doctor!
  deleteMecialSpecialty(id: String!): MedicalSpecialties!
  deleteMedicalStaff(input: String!): MedicalStaff!
  deletePackage(input: String!): Package!
  deleteProfile(id: String!): Profile!
  deleteTypePackage(id: String!): TypePackage!
  deleteUser(id: String!): User!
  deleteVaccination(input: String!): Vaccination!
  login(loginUserInput: LoginUserInput!): LoginRespone!
  logout: LogoutUser!
  signup(createUserInput: CreateUserInput!): User!
  signupUser(createUserInput: CreateUserByAdminInput!): User!
  updateCarePackage(input: UpdateCarePackageInput!): CarePackage!
  updateCustomer(input: UpdateCustomerInput!): Customer!
  updateDegree(input: UpdateDegreeInput!): Degree!
  updateDoctor(updateDoctorInput: UpdateDoctorInput!): Doctor!
  updateGeneralInfor(updateGeneralInforInput: GeneralInforUpdateInput!): GeneralInfor!
  updateMedicalFacilities(createMedicalFacilitiesInput: UpdateMedicalFacilityInput!): MedicalFacilities!
  updateMedicalSpecialty(input: UpdateMedicalSpecialtyInput!): MedicalSpecialties!
  updateMedicalStaff(input: UpdateMedicalStaffInput!): MedicalStaff!
  updatePackage(input: UpdatePackageInput!): Package!
  updateProfile(input: UpdateProfileInput!): Profile!
  updateRegister(input: UpdateRegisterInput!): Register!
  updateRoles(updateRolesInput: UpdateRolesInput!): User!
  updateSetting(updateSettingInput: UpdateSettingInput!): Setting!
  updateTypePackage(input: UpdateTypePackageInput!): TypePackage!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateUserWithPass(updateUserInput: UpdateUserWithPassInput!): User!
  updateVaccination(input: UpdateVaccineInput!): Vaccination!
}

type Package {
  examinationDetails: String!
  gender: EGender!
  id: ID!
  medicalFactilitiesId: String!
  packageName: String!
  price: Float!
  status: String!
}

type Profile {
  address: String!
  customerId: String!
  dataOfBirth: DateTime!
  email: String!
  ethnic: String!
  fullname: String!
  gender: String!
  id: ID!
  identity: String
  job: String!
  medicalInsurance: String
  numberPhone: String!
  register: [Register!]
  relationship: String!
}

type Query {
  checklogin: User!
  getAllCustomer: [Customer!]!
  getAllDegree: [Degree!]!
  getAllDoctor: [Doctor!]!
  getAllMecialSpecialty: [MedicalSpecialties!]!
  getAllMedicalFacility: [MedicalFacilities!]!
  getAllMedicalStaff: [MedicalStaff!]!
  getAllPackage: [Package!]!
  getAllTypePackage: [TypePackage!]!
  getAllVacation: [Vaccination!]!
  getCarePackagesByClinicId(id: String!): [CarePackage!]!
  getDoctorbyId(id: String!): Doctor!
  getDoctorbyUserId(id: String!): Doctor!
  getGeneralInfor: GeneralInfor!
  getMedicalFacilityById(id: String!): MedicalFacilities!
  getMedicalFacilityByUserId(id: String!): MedicalFacilities!
  getProfileByCustomerId(id: String!): [Profile!]!
  getSetting: Setting!
  getUser(username: String!): User!
  getUserMedicalNon: [User!]!
  getUserSelect(roleInput: UserSelectInput!): [User!]!
  users: [User!]!
}

type Register {
  carePackage: CarePackage
  date: DateTime!
  id: ID!
  packegeId: String!
  profile: Profile
  profileId: String!
  state: RegisterState!
}

"""Trạng thái của Register"""
enum RegisterState {
  Active
  NoActive
  Success
}

type Setting {
  defaultLang: String!
}

type TypePackage {
  carePackage: [CarePackage!]
  id: ID!
  typeName: String!
}

input UpdateCarePackageInput {
  discription: String!
  id: String!
  image: LinkImageInput!
  medicalFacilitiesId: String!
  name: String!
  price: Float!
  typePackageId: String!
}

input UpdateCustomerInput {
  address: String
  dateOfBirth: DateTime
  email: String
  gender: String
  id: String!
  name: String!
  nation: String
  numberPhone: String
}

input UpdateDegreeInput {
  abbreviations: String!
  id: String!
  name: String!
}

input UpdateDoctorInput {
  academicTitle: String
  avatar: LinkImageInput!
  dayOff: [DateTime!]!
  degree: String!
  discription: String!
  email: String!
  gender: String!
  id: String!
  medicalFactilitiesId: String!
  name: String!
  numberPhone: String!
  specialistId: String!
  userId: String!
}

input UpdateMedicalFacilityInput {
  address: String!
  dayOff: [DateTime!]!
  discription: String!
  email: String!
  id: String!
  image: LinkImageInput!
  introduce: String!
  lat: Float
  legalRepresentation: String!
  lng: Float
  medicalFacilityName: String!
  numberPhone: String!
  operatingStatus: String!
  taxCode: String!
  userId: String!
}

input UpdateMedicalSpecialtyInput {
  discription: String!
  id: String!
  medicalFactilityId: String!
  name: String!
  price: Float!
}

input UpdateMedicalStaffInput {
  email: String!
  gender: String!
  id: String!
  medicalFacilityId: String!
  name: String!
  numberPhone: String!
  userId: String!
}

input UpdatePackageInput {
  examinationDetails: String!
  gender: EGender!
  id: String!
  medicalFactilitiesId: String!
  packageName: String!
  price: Float!
  status: String!
}

input UpdateProfileInput {
  address: String
  dataOfBirth: DateTime
  email: String
  ethnic: String
  fullname: String
  gender: String
  id: String!
  identity: String
  job: String
  medicalInsurance: String
  numberPhone: String
  relationship: String
}

input UpdateRegisterInput {
  id: String!
  state: String!
}

input UpdateRolesInput {
  id: String!
  roles: [String!]!
}

input UpdateSettingInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateTypePackageInput {
  id: String!
  typeName: String!
}

input UpdateUserInput {
  active: Boolean
  email: String
  id: String!
  linkImage: LinkImageInput
  username: String
}

input UpdateUserWithPassInput {
  active: Boolean
  email: String!
  id: String!
  linkImage: LinkImageInput
  password: String!
  passwordNew: String!
  username: String!
}

input UpdateVaccineInput {
  countryOfOrigin: String!
  id: String!
  indication: String!
  medicalFactilitiesId: String!
  note: String!
  price: Float!
  prophylactic: String!
  status: String!
  vaccineName: String!
}

type User {
  active: Boolean
  customer: Customer
  doctor: Doctor
  email: String!
  id: ID!
  linkImage: LinkImage
  medicalFacilities: MedicalFacilities
  password: String!
  roles: [String!]
  username: String!
}

input UserSelectInput {
  role: String!
}

type Vaccination {
  countryOfOrigin: String!
  id: ID!
  indication: String!
  medicalFactilitiesId: String!
  note: String!
  price: Float!
  prophylactic: String!
  status: String!
  vaccineName: String!
}

input createCarePackageInput {
  discription: String!
  image: LinkImageInput!
  medicalFacilitiesId: String!
  name: String!
  price: Float!
  typePackageId: String!
}